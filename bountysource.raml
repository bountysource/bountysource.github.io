#%RAML 0.8
title: Bountysource
baseUri: https://api.bountysource.com
protocols:  [ HTTPS ]
mediaType: application/vnd.bountysource+json; version=2
version: v2.0

traits:
  paginated:
    queryParameters:
      per_page:
        displayName: Per Page
        description: How many results per page
        type: integer
        example: 20
        minimum: 1
        maximum: 100
        default: 30
      page:
        displayName: Page
        description: (1-based) page number
        type: integer
        example: 2
        minimum: 1
        default: 1
    responses:
      200:
        headers:
          Link:
            description: |
              First, last, previous, next header links when they exist
            type: string
            required: false
            example: '</foo>; rel="next", </bar>; rel="last", </baz>; rel="first", </bat>; rel="previous"'

  versioned:
    headers:
      Accept:
        description: |
          This API uses a Bountysource vendor-specific superset of JSON.
          Supply the version as a mime type parameter.
        type: string
        required: true
        enum: [
          "application/vnd.bountysource+json; version=1",
          "application/vnd.bountysource+json; version=2" ]
        default: application/vnd.bountysource+json; version=1
        example: application/vnd.bountysource+json; version=2

  ordered:
    queryParameters:
      order:
        displayName: Order Value
        description: The value to order by. Specify direction by appending "+" or "-" to value, "+" for descending, "-" for ascending. Default direction is descending.
        type: string
        enum: [ "+bounty", "-bounty", "bounty" ]

routes:
  /trackers:
    is: [ paginated, versioned ]
    displayName: Issue Trackers
    description: List of issue trackers
    get:
      queryParameters:
        type:
          displayName: Type
          description: Filter by issue tracker type
          type: string
          enum: [
            "github",
            "bitbucket",
            "bugzilla",
            "google",
            "jira",
            "lanchpad",
            "pivotal",
            "sourceforge",
            "trac",
            "roundup" ]

        featured:
          displayName: Featured
          description: Filter by featured. When ommitted, both featured and undfeatured trackers are returned.
          type: boolean
          example: true

        has_bounties:
          displayName: Has Active Bounties
          description: Filter by issues trackers with active bounties. When ommitted, all issue trackers are returned.
          type: boolean
          example: true

        order:
          displayName: Order
          description: Order trackers by value
          type: string
          enum: [
            "bounty",
            "open_issues",
            "closed_issues" ]

  /trackers/{id}:
    is: [ versioned ]
    get:
      responses:
        200:
          body:
            example: |
              {
                "id": 123,
                "display_name": "Amazing Project",
                "slug": "123-amazing-project",

                "homepage": "http://organization.net/amazing_project",
                "repo_url": "http://github.com/organization/amazing_project",
                "synced_at": "2014-02-11T18:28:06Z",
                "open_issues": 23,
                "closed_issues": 98,

                "image_url_small": "http://foo.com/amazing_logo_small.png",
                "image_url_medium": "http://foo.com/amazing_logo_medium.png",
                "image_url_large": "http://foo.com/amazing_logo_large.png",

                "remote_url": "https://bugs.organization.net/amazing_project",
                "remote_name": "organization/amazing_project",

                "featured": false,
                "languages": [ "Javascript" ]
              }

  /following:
    displayName: Follows
    is: [ versioned, paginated ]
    description: Which users are following which issue trackers
    get:
      queryParameters:
        user_id:
          description: Show follows of specific user
          type: integer
        tracker_id:
          description: Show follows of specific issue tracker
          type: integer
      responses:
        206:
          body:
            example: |
              [
                {
                  "user_id": 1,
                  "tracker_id": 2
                }
              ]

  /issues:
    displayName: Issues
    description: Issues from GitHub, Bitbucket, Bugzilla, etc.
    is: [ paginated, versioned ]
    get:
      queryParameters:
        tracker_id:
          displayName: Tracker ID
          description: Issues for this tracker id
          type: integer
          example: 123
        tracker_type:
          displayName: Tracker Type
          description: Issues for this tracker type
          type: string
          enum: [
            "github",
            "bitbucket",
            "bugzilla",
            "google",
            "jira",
            "lanchpad",
            "pivotal",
            "sourceforge",
            "trac",
            "roundup" ]
          example: github
        can_add_bounty:
          displayName: Opened/Closed
          description: Filter issues that can('t) accept new bounties (blank means both)
          type: boolean
        include_body_html:
          displayName: Include body
          description: Include the (often large) body_html property
          type: boolean
          default: false
        featured:
          displayName: Featured
          description: "Filter issues by featured value. When this param is ommitted, both featured an non-featured issues are returned"
          type: boolean
          default: false
        order:
          displayName: Order
          description: Order issues by value. Specify order by prepending value with "+" or "-".
          type: string
          enum: [
            "team_rank",
            "linked_account_rank",
            "rank",
            "bounty",
            "remote_created_at",
            "comments",
            "participants",
            "thumbs",
            "votes",
            "created_at",
            "updated_at" ]
          example: "+bounty"

  /issues/{id}:
    is: [ versioned ]
    get:
      queryParameters:
        include_bounty_claims:
          description: Embed array of claims in each issue
          type: boolean
          default: false
        include_body_html:
          description: Include the (often large) body_html property
          type: boolean
          default: true
        include_tracker:
          description: Embed the tracker object for this issue
          type: boolean
          default: false
        include_author:
          description: Include Linked Account (if any) that created this issue
          type: boolean
          default: false
      responses:
        200:
          body:
            example: |
              {
                "id": 1,
                "type": "Bugzilla::Issue",
                "slug": "1-make-project-more-amazing",
                "title": "Make project more amazing",
                "tracker_id": 123,

                "body_html": "<p>It needs something, you know.</p>",
                "created_at": "2013-07-24T14:07:00Z",
                "featured" false,
                "can_add_bounty": true,
                "paid_out": false,
                "priority": "P2",
                "severity": "Blocker",

                "bounty_total": 1000.0,
                "has_active_solution": true,

                "rank" : 42,

                "remote_created_at": "2012-02-24T14:07:20Z",
                "remote_updated_at": "2014-03-01T14:17:53Z",
                "url": "https://bugzilla.organization.net/show_bug.cgi?id=52664",

                "thumbs": 2,
                "participants": 9,
                "votes": 15,
                "watchers": 216,

                "author": { }
              }

  /comments:
    displayName: Comments
    description: Discussion on issues from users
    is: [ paginated, versioned ]
    get:
      queryParameters:
        issue_id:
          description: Limit to comments for an issue
          type: integer
        include_author:
          description: Include comment authors in the response
          type: boolean
          default: false
        include_body_html:
          description: Include the body of the comment as HTML
          type: boolean
          default: true

  /comments/{id}:
    is: [ versioned ]
    get:
      queryParameters:
        include_issue:
          description: Include the issue in the response
          type: boolean
          default: false
        include_author:
          description: Include comment author in the response
          type: boolean
          default: false
        include_body_html:
          description: Include the body of the comment as HTML
          type: boolean
          default: true
      responses:
        200:
          body:
            example: |
              {
                "id": 12,
                "created_at: "2013-07-24T14:07:00Z",
                "body_html": "Why is this bug so <strong>difficult?</strong",
                "author": { },
                "issue": { }
              }

  /bounties:
    displayName: Bounties
    description: Bounties open on issues
    is: [ paginated, versioned ]
    get:
      queryParameters:
        issue_id:
          description: Limit to bounties on this issue
          type: integer
        backer_id:
          description: Limit to bounties by this user
          type: integer
        tracker_id:
          description: Limit to bounties this issue tracker
          type: integer


  /bounties/{id}:
    is: [ versioned ]
    get:
      responses:
        200:
          body:
            example: |
              {
                "id": 10,
                "issue_id": 1,
                "backer_id": 2,
                "tracker_id": 3,
                "created_at": "2013-07-24T14:07:00Z",
                "amount": 1000,
                "status": "active"
              }

  /bounty_claims:
    displayName: Bounty Claims
    description: Claims for available bounties on issues
    is: [ paginated, versioned ]
    get:
      queryParameters:
        issue_id:
          description: Limit to bounty claims on this issue
          type: integer

  /bounty_claims/{id}:
    is: [ versioned ]
    get:
      responses:
        200:
          body:
            example: |
              {
                "id": 1,
                "issue_id": 12,
                "created_at": "2013-07-24T14:07:00Z",
                "amount_paid": "150.00",
                "contested_by_backers": false,
                "in_dispute_period": false,
                "rejected": false
              }

  /bounty_claim_events:
    displayName: Bounty Claim Events
    description: Events that have happened on bounty claims.
    is: [ paginated, versioned ]
    get:
      queryParameters:
        claim_id:
          description: Limit to events on a specific bounty claim
          type: integer
        person_id:
          description: Limit to events by a specific user
          type: integer
        type:
          description: Limit to events of a specific type
          type: string
          # enum: [ "type1", "type2" ]

  /bounty_claim_events/{id}:
    is: [ versioned ]
    get:
      responses:
        200:
          body:
            example: |
              {
                "id": 10,
                "claim_id": 1,
                "person_id": 2,
                "type": "Response",
                "should_claim_be_accepted": true,
                "description": "Great job fixing this bug"
              }

  /linked_accounts/{id}:
    displayName: Linked Account
    is: [ versioned ]
    description: A user who is involved with issues but not yet necessarily on Bountysource
    get:
      responses:
        200:
          body:
            example: |
              {
                "id": 42,
                "slug": "42-mr-smith",
                "user_id": null,
                "type": "LinkedAccount::Unknown",
                "created_at": "2013-07-24T14:07:00Z",

                "display_name": "Mr. Smith",

                "remote_id": 3487262,
                "remote_username": "mrsmith"
              }
  /people:
    is: [ versioned, paginated ]
    displayName: People
    description: People that have signed up with Bountysource
    get:
      queryParameters:
        order:
          displayName: Order
          description: Change sort order of response
          type: string
          required: false
          enum: [
            "created_at",
            "followers" ]

  /people/{id}:
    is: [ versioned ]
    get:
      responses:
        200:
          body:
            example: |
              {
                "id": 42,
                "display_name": "Robert Paulson",
                "bio": "Yes, that is my name.",
                "location": "Portland, Oregon",
                "company": "Paper Street Soap Co.",
                "url": "http://www.paperstreetsoap.com/",
                "public_email": "robert.paulson@paperstreetsoap.com",
                "profile_completed": false,
                "created_at": "2014-04-24T00:00:00.000Z",
                "type": "Person",
                "slug": "42-robert-paulson",
                "image_url_small": "https://cloudinary-a.akamaihd.net/bountysource/image/facebook/d_noaoqqwxegvmulwus0un.png,c_pad,w_100,h_100/robert.paulson.jpg",
                "image_url_medium": "https://cloudinary-a.akamaihd.net/bountysource/image/facebook/d_noaoqqwxegvmulwus0un.png,c_pad,w_200,h_200/robert.paulson.jpg",
                "image_url_large": "https://cloudinary-a.akamaihd.net/bountysource/image/facebook/d_noaoqqwxegvmulwus0un.png,c_pad,w_400,h_400/robert.paulson.jpg"
              }
